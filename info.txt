Cia gera info kaip galima ant Game Development panaudoti design patterns:
https://gamedev.stackexchange.com/questions/4157/what-are-some-programming-design-patterns-that-are-useful-in-game-development

L1:

Singleton - pvz zaidimo map'as yra singletonas, arba zaidejo input gavimo klase, pvz Keyboard ar mouse.

Factory - Enemies sukurimui galima panaudoti.

Abstract Factory - naudoti, kad sistema nepirklausytų nuo to, kaip
jos produktai yra sukuriami. Irgi enemies kurimui galima panaudoti,
pvz sujungiant kelis factories ir priesus abstrakciai kuriant.

Strategy - Leidzia naudoti ivairias tam tikro algoritmo implementacijas.
Enemy next action algoritmas gali buti panaudotas su strategy.
Tarkim butu daug skirtingu pagal enemy sunkumo lygi veiksmo atlikimo
algoritmu
"Lets you change out AI strategies elegantly."

Observer - Define a one-to-many dependency between objects so that
when one object changes state, all its dependents are notified and
updated automatically.
Notifyinti galima pvz kad zaidejo life'ai pasieke tam tikra kieki
ir kad tarkim del to priesai pasidarytu agresyvesni ar pns.

Builder - nelabai sugalvoju, kaip galima pritaikyti

L2:

Prototype -  "store one generic 'Elf' character with initial properties and
create Elf instances by cloning it." Musu atveju butu galima tureti Enemy
su initial properties ir kurti ju instances klonuojant juos, bet nezinau 
ar taip bus gerai.

Decorator - su juo galima pvz: naudoti HUDDecorator, kuris dekoruotu zaidimo
vaizda su hud elementais - kiek hp turi, kokius tarkim spec efektus gali
naudoti (pvz kaip HUD ant strateginiu geimu)

Command - encapsulate game functionality as commands which can be typed 
into a console, stored and replayed, or even scripted to help test the game

Adapter - Boss klase bus, kuris nebus Enemy, tai reiks adapterio tarp ju.

Facade - "simplify complex 3rd party libraries by providing a simpler 
interface to make your life easier later."

Bridge - 

L3:

Template Method - 

Iterator -

Composite -

Flyweight -

State - Galima butu zaidimo state'a saugoti - sustabdytas, nepradetas ir panasiai

Proxy -

L4:

Chain of responsibility - "handle input as a chain of handlers, eg. global keys (eg. for screen shots), then the 
GUI (eg. in case a text box is focused or a menu is up), then the game (eg. for moving a character)"

Interpreter -

Mediator -

Memento -

Visitor -

Klasės:
Player
Level
Wall
IEnemy
EnemyA
EnemyB
EnemyC
IGun
GunA
GunB
GunC
Health pack
IKulka
KulkaA
KulkaB
KulkaC
IArmor
ArmorA
ArmorB
ArmorC
Action - ka padarys Enemy (paeis, issaus).
